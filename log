src/cocoa_monitor.m:48:38: warning: 'kIOMasterPortDefault' is deprecated: first deprecated in macOS 12.0 [-Wdeprecated-declarations]
    if (IOServiceGetMatchingServices(kIOMasterPortDefault,
                                     ^~~~~~~~~~~~~~~~~~~~
                                     kIOMainPortDefault
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h:123:19: note: 'kIOMasterPortDefault' has been explicitly marked deprecated here
const mach_port_t kIOMasterPortDefault
                  ^
src/cocoa_monitor.m:246:38: warning: 'kIOMasterPortDefault' is deprecated: first deprecated in macOS 12.0 [-Wdeprecated-declarations]
    if (IOServiceGetMatchingServices(kIOMasterPortDefault,
                                     ^~~~~~~~~~~~~~~~~~~~
                                     kIOMainPortDefault
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/IOKit.framework/Headers/IOKitLib.h:123:19: note: 'kIOMasterPortDefault' has been explicitly marked deprecated here
const mach_port_t kIOMasterPortDefault
                  ^
2 warnings generated.
src/cocoa_window.m:357:62: warning: 'kUTTypeURL' is deprecated: first deprecated in macOS 12.0 - Use UTTypeURL instead. [-Wdeprecated-declarations]
        [self registerForDraggedTypes:@[(__bridge NSString*) kUTTypeURL]];
                                                             ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Headers/UTCoreTypes.h:210:26: note: 'kUTTypeURL' has been explicitly marked deprecated here
extern const CFStringRef kUTTypeURL                                  API_DEPRECATED("Use UTTypeURL instead.", ios(3.0, 15.0), macos(10.4, 12.0), tvos(9.0, 15.0), watchos(1.0, 8.0));
                         ^
1 warning generated.
In file included from src/Hazard/Core/CommandLineArgs.cpp:3:
src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/Scripting/CSharp/AttributeBuilder.cpp:2:
In file included from src/Scripting/CSharp/AttributeBuilder.h:3:
src/Scripting/CSharp/Mono/Mono.h:87:22: warning: explicit specialization cannot have a storage class
                static std::string GetFieldValue(MonoObject* object, MonoClassField* field) {
                ~~~~~~~            ^
1 warning generated.
In file included from src/Scripting/CSharp/CSharpEngine.cpp:4:
src/Scripting/CSharp/Mono/Mono.h:87:22: warning: explicit specialization cannot have a storage class
                static std::string GetFieldValue(MonoObject* object, MonoClassField* field) {
                ~~~~~~~            ^
1 warning generated.
In file included from src/Scripting/CSharp/CSharpField.cpp:5:
src/Scripting/CSharp/Mono/Mono.h:87:22: warning: explicit specialization cannot have a storage class
                static std::string GetFieldValue(MonoObject* object, MonoClassField* field) {
                ~~~~~~~            ^
1 warning generated.
In file included from src/Scripting/CSharp/CSharpScript.cpp:5:
src/Scripting/CSharp/Mono/Mono.h:87:22: warning: explicit specialization cannot have a storage class
                static std::string GetFieldValue(MonoObject* object, MonoClassField* field) {
                ~~~~~~~            ^
1 warning generated.
In file included from src/Scripting/CSharp/Mono/Mono.cpp:3:
src/Scripting/CSharp/Mono/Mono.h:87:22: warning: explicit specialization cannot have a storage class
                static std::string GetFieldValue(MonoObject* object, MonoClassField* field) {
                ~~~~~~~            ^
src/Scripting/CSharp/Mono/Mono.cpp:104:61: warning: implicit conversion of NULL constant to 'mono_bool' (aka 'int') [-Wnull-conversion]
                MonoMethodDesc* desc = mono_method_desc_new(name.c_str(), NULL);
                                       ~~~~~~~~~~~~~~~~~~~~               ^~~~
                                                                          0
src/Scripting/CSharp/Mono/Mono.cpp:111:61: warning: implicit conversion of NULL constant to 'mono_bool' (aka 'int') [-Wnull-conversion]
                MonoMethodDesc* desc = mono_method_desc_new(name.c_str(), NULL);
                                       ~~~~~~~~~~~~~~~~~~~~               ^~~~
                                                                          0
src/Scripting/CSharp/Mono/Mono.cpp:299:42: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                        domain = mono_domain_create_appdomain("Hazard-runtime", nullptr);
                                                              ^
4 warnings generated.
In file included from src/Scripting/CSharp/Script/Hazard/ECS/EntityBindings.cpp:7:
src/Scripting/CSharp/Mono/Mono.h:87:22: warning: explicit specialization cannot have a storage class
                static std::string GetFieldValue(MonoObject* object, MonoClassField* field) {
                ~~~~~~~            ^
1 warning generated.
In file included from src/Scripting/CSharp/ScriptUtils.cpp:4:
src/Scripting/CSharp/Mono/Mono.h:87:22: warning: explicit specialization cannot have a storage class
                static std::string GetFieldValue(MonoObject* object, MonoClassField* field) {
                ~~~~~~~            ^
src/Scripting/CSharp/ScriptUtils.cpp:59:14: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                        char* a = "NULL";
                                  ^
2 warnings generated.
In file included from src/Core/HazardEditor.cpp:3:
In file included from src/Core/HazardEditor.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/Core/SceneRuntimeHandler.cpp:3:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/EditorPopup.cpp:3:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/EditorTabWindow.cpp:2:
In file included from src/GUI/EditorTabWindow.h:4:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/EditorView.cpp:3:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
src/GUI/EditorView.cpp:12:10: warning: non-portable path to file '<GLFW/glfw3.h>'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include <glfw/glfw3.h>
         ^~~~~~~~~~~~~~
         <GLFW/glfw3.h>
5 warnings generated.
In file included from src/GUI/Window/Debug/AudioEngineDebug.cpp:7:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/Debug/Console.cpp:7:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
src/GUI/Window/Debug/Profiler.cpp:31:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                        ImGui::Text(ss.str().c_str());
                                    ^~~~~~~~~~~~~~~~
src/GUI/Window/Debug/Profiler.cpp:31:16: note: treat the string as an argument to avoid this
                        ImGui::Text(ss.str().c_str());
                                    ^
                                    "%s", 
1 warning generated.
In file included from src/GUI/Window/Debug/ScriptEngineDebug.cpp:7:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
src/GUI/Window/Editor/BuildWindow.cpp:3:10: warning: non-portable path to file '"Library/Layout/Layout.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "library/Layout/Layout.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~
         "Library/Layout/Layout.h"
src/GUI/Window/Editor/BuildWindow.cpp:60:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                        ImGui::Text(ss.str().c_str());
                                    ^~~~~~~~~~~~~~~~
src/GUI/Window/Editor/BuildWindow.cpp:60:16: note: treat the string as an argument to avoid this
                        ImGui::Text(ss.str().c_str());
                                    ^
                                    "%s", 
src/GUI/Window/Editor/BuildWindow.cpp:80:17: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                                ImGui::Text(Hazard::Utils::AssetTypeToString(type));
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/GUI/Window/Editor/BuildWindow.cpp:80:17: note: treat the string as an argument to avoid this
                                ImGui::Text(Hazard::Utils::AssetTypeToString(type));
                                            ^
                                            "%s", 
src/GUI/Window/Editor/BuildWindow.cpp:94:18: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                                        ImGui::Text(resources.FileName.c_str());
                                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
src/GUI/Window/Editor/BuildWindow.cpp:94:18: note: treat the string as an argument to avoid this
                                        ImGui::Text(resources.FileName.c_str());
                                                    ^
                                                    "%s", 
src/GUI/Window/Editor/BuildWindow.cpp:149:17: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                                ImGui::Text(world.Path.string().c_str());
                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~
src/GUI/Window/Editor/BuildWindow.cpp:149:17: note: treat the string as an argument to avoid this
                                ImGui::Text(world.Path.string().c_str());
                                            ^
                                            "%s", 
5 warnings generated.
src/GUI/Window/Editor/SettingsView.cpp:96:15: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                ImGui::Text(File::GetNameNoExt(manager.GetProject().StartupWorld).c_str());
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/GUI/Window/Editor/SettingsView.cpp:96:15: note: treat the string as an argument to avoid this
                ImGui::Text(File::GetNameNoExt(manager.GetProject().StartupWorld).c_str());
                            ^
                            "%s", 
1 warning generated.
src/GUI/Window/Editor/WelcomePopup.cpp:4:10: warning: non-portable path to file '"GUI/EditorView.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "Gui/EditorView.h"
         ^~~~~~~~~~~~~~~~~~
         "GUI/EditorView.h"
In file included from src/GUI/Window/Editor/WelcomePopup.cpp:4:
In file included from src/Gui/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
5 warnings generated.
In file included from src/GUI/Window/Inspect/FileView.cpp:2:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
In file included from src/GUI/Window/Inspect/FileView.cpp:6:
src/Library/Input.h:35:23: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                        ImGui::TextWrapped(name);
                                           ^~~~
src/GUI/Window/Inspect/FileView.cpp:168:11: note: in instantiation of function template specialization 'WindowElement::Input::FileButton<(lambda at src/GUI/Window/Inspect/FileView.cpp:168:56)>' requested here
                        Input::FileButton(name.c_str(), m_Images["folder"], [&]() {}, { colWidth - 5, colHeight });
                               ^
src/Library/Input.h:35:23: note: treat the string as an argument to avoid this
                        ImGui::TextWrapped(name);
                                           ^
                                           "%s", 
src/Library/Input.h:35:23: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                        ImGui::TextWrapped(name);
                                           ^~~~
src/GUI/Window/Inspect/FileView.cpp:184:11: note: in instantiation of function template specialization 'WindowElement::Input::FileButton<(lambda at src/GUI/Window/Inspect/FileView.cpp:184:106)>' requested here
                        Input::FileButton(File::GetNameNoExt(metadata.Path.string()).c_str(), GetFileImageFromType(metadata), [&]() {
                               ^
src/Library/Input.h:35:23: note: treat the string as an argument to avoid this
                        ImGui::TextWrapped(name);
                                           ^
                                           "%s", 
6 warnings generated.
In file included from src/GUI/Window/Inspect/Hierarchy.cpp:2:
In file included from src/GUI/Window/Inspect/Hierarchy.h:3:
In file included from src/Core/EditorEvent.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/Inspect/MaterialInspector.cpp:2:
In file included from src/GUI/Window/Inspect/MaterialInspector.h:4:
In file included from src/Core/EditorEvent.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
src/GUI/Window/Inspect/MaterialInspector.cpp:21:15: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                ImGui::Text(selectionContext.GetTag().Tag.c_str());
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/GUI/Window/Inspect/MaterialInspector.cpp:21:15: note: treat the string as an argument to avoid this
                ImGui::Text(selectionContext.GetTag().Tag.c_str());
                            ^
                            "%s", 
5 warnings generated.
In file included from src/GUI/Window/Inspect/Properties.cpp:2:
In file included from src/GUI/Window/Inspect/Properties.h:4:
In file included from src/Core/EditorEvent.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/MenuBar.cpp:9:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
src/GUI/Window/MenuBar.cpp:76:15: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                ImGui::Text(projectName.c_str());
                            ^~~~~~~~~~~~~~~~~~~
src/GUI/Window/MenuBar.cpp:76:15: note: treat the string as an argument to avoid this
                ImGui::Text(projectName.c_str());
                            ^
                            "%s", 
5 warnings generated.
In file included from src/GUI/Window/Rendering/Performance.cpp:2:
In file included from src/GUI/Window/Rendering/Performance.h:4:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/Rendering/TransformationGizmo.cpp:2:
In file included from src/GUI/Window/Rendering/TransformationGizmo.h:5:
In file included from src/Core/EditorEvent.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/Rendering/Viewport.cpp:2:
In file included from src/GUI/Window/Rendering/Viewport.h:4:
In file included from src/GUI/Window/Rendering/TransformationGizmo.h:5:
In file included from src/Core/EditorEvent.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/Tabs/EditorMainTab.cpp:3:
In file included from src/GUI/Window/Tabs/EditorMainTab.h:3:
In file included from src/GUI/EditorTabWindow.h:4:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/Tabs/NodeGraphTab.cpp:2:
In file included from src/GUI/Window/Tabs/NodeGraphTab.h:3:
In file included from src/GUI/EditorTabWindow.h:4:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
In file included from src/GUI/Window/Toolbar.cpp:7:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
src/GUI/Window/Toolbar.cpp:10:10: warning: non-portable path to file '"GUI/Window/Rendering/Viewport.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "Gui/Window/Rendering/Viewport.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         "GUI/Window/Rendering/Viewport.h"
src/GUI/Window/Toolbar.cpp:11:10: warning: non-portable path to file '"GUI/Window/Rendering/GameViewport.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "Gui/Window/Rendering/GameViewport.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         "GUI/Window/Rendering/GameViewport.h"
src/GUI/Window/Toolbar.cpp:12:10: warning: non-portable path to file '"GUI/Window/Rendering/WorldEnvironmentData.h"'; specified path differs in case from file name on disk [-Wnonportable-include-path]
#include "Gui/Window/Rendering/WorldEnvironmentData.h"
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
         "GUI/Window/Rendering/WorldEnvironmentData.h"
7 warnings generated.
src/Library/DragDropUtils.cpp:15:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                        ImGui::Text(text.c_str());
                                    ^~~~~~~~~~~~
src/Library/DragDropUtils.cpp:15:16: note: treat the string as an argument to avoid this
                        ImGui::Text(text.c_str());
                                    ^
                                    "%s", 
src/Library/DragDropUtils.cpp:16:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                        ImGui::Text(type);
                                    ^~~~
src/Library/DragDropUtils.cpp:16:16: note: treat the string as an argument to avoid this
                        ImGui::Text(type);
                                    ^
                                    "%s", 
2 warnings generated.
In file included from src/Library/Input.cpp:11:
../Hazard/src/Platform/Rendering/OpenGL/Textures/OpenGLTexture2D.h:16:16: warning: 'Resize' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]
                virtual void Resize(uint32_t width, uint32_t height) {};
                             ^
../Hazard/src/Hazard/Rendering/Texture.h:38:16: note: overridden virtual function is here
                virtual void Resize(uint32_t width, uint32_t height) = 0;
                             ^
In file included from src/Library/Input.cpp:11:
../Hazard/src/Platform/Rendering/OpenGL/Textures/OpenGLTexture2D.h:17:18: warning: 'GetWriteBuffer' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]
                virtual Buffer GetWriteBuffer() { return Buffer(); };
                               ^
../Hazard/src/Hazard/Rendering/Texture.h:39:18: note: overridden virtual function is here
                virtual Buffer GetWriteBuffer() = 0;
                               ^
In file included from src/Library/Input.cpp:11:
../Hazard/src/Platform/Rendering/OpenGL/Textures/OpenGLTexture2D.h:18:16: warning: 'Loaded' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]
                virtual bool Loaded() const { return m_Loaded; };
                             ^
../Hazard/src/Hazard/Rendering/Texture.h:40:16: note: overridden virtual function is here
                virtual bool Loaded() const = 0;
                             ^
In file included from src/Library/Input.cpp:11:
../Hazard/src/Platform/Rendering/OpenGL/Textures/OpenGLTexture2D.h:21:12: warning: 'GetID' overrides a member function but is not marked 'override' [-Winconsistent-missing-override]
                uint32_t GetID() const { return m_ID; }
                         ^
../Hazard/src/Hazard/Rendering/Texture.h:33:20: note: overridden virtual function is here
                virtual uint32_t GetID() const = 0;
                                 ^
In file included from src/Library/Input.cpp:11:
../Hazard/src/Platform/Rendering/OpenGL/Textures/OpenGLTexture2D.h:25:46: warning: returning reference to local temporary object [-Wreturn-stack-address]
                virtual const Buffer& GetBuffer() { return Buffer(); }
                                                           ^~~~~~~~
src/Library/Input.cpp:345:29: warning: cast to 'void *' from smaller integer type 'uint32_t' (aka 'unsigned int') [-Wint-to-void-pointer-cast]
                return ImGui::ImageButton((ImTextureID)image.As<Hazard::Rendering::OpenGL::OpenGLTexture2D>()->GetID(), size, {0, 1}, {1, 0});
                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
6 warnings generated.
In file included from src/Library/Layout/ContextMenus.cpp:2:
In file included from src/Library/Layout/ContextMenus.h:4:
In file included from src/GUI/Window/Inspect/FileView.h:2:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
src/Library/Layout/Layout.cpp:95:21: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
        ImGui::Text(text.c_str());
                    ^~~~~~~~~~~~
src/Library/Layout/Layout.cpp:95:21: note: treat the string as an argument to avoid this
        ImGui::Text(text.c_str());
                    ^
                    "%s", 
src/Library/Layout/Layout.cpp:99:57: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
        ImGui::TextColored(Style::ColorAsImVec4(color), text);
                                                        ^~~~
src/Library/Layout/Layout.cpp:99:57: note: treat the string as an argument to avoid this
        ImGui::TextColored(Style::ColorAsImVec4(color), text);
                                                        ^
                                                        "%s", 
2 warnings generated.
In file included from src/Project/ProjectManager.cpp:3:
In file included from src/GUI/EditorView.h:7:
In file included from src/Platform/EditorGuiPlatform.h:3:
In file included from ../Hazard/src/Hazard.h:9:
../Hazard/src/Hazard/Core/CommandLineArgs.h:32:15: warning: explicit specialization cannot have a storage class
                static bool Get(const std::string& key)
                ~~~~~~~     ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:37:22: warning: explicit specialization cannot have a storage class
                static std::string Get(const std::string& key)
                ~~~~~~~            ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:44:35: warning: explicit specialization cannot have a storage class
                static std::vector<std::string> Get(const std::string& key)
                ~~~~~~~                         ^
../Hazard/src/Hazard/Core/CommandLineArgs.h:49:20: warning: explicit specialization cannot have a storage class
                static RenderAPI Get(const std::string& key) {
                ~~~~~~~          ^
4 warnings generated.
ld: can't write output file to '../bin/Debug-macosx-universal/HazardEditor/HazardEditor.app' because that path is a directory
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[1]: *** [../bin/Debug-macosx-universal/HazardEditor/HazardEditor.app] Error 1
make: *** [HazardEditor] Error 2
